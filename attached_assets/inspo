import React, { useState } from 'react';
import { Search, Camera, User, Home, Target, MessageCircle, Users, TrendingUp, Star, Trophy, Calendar, Share2, Clock, CheckCircle, Lock, ChevronRight, Zap, Brain, Focus, Heart, Play, Award, Flame, Shield } from 'lucide-react';

const HabitApp = () => {
  const [currentTab, setCurrentTab] = useState('home');
  const [currentMood, setCurrentMood] = useState('neutral');

  const TabButton = ({ id, icon: Icon, label, isActive, onClick }) => (
    <button
      onClick={onClick}
      className={`flex flex-col items-center gap-2 p-3 rounded-2xl transition-all duration-300 ${
        isActive 
          ? 'text-white bg-white/10 backdrop-blur-sm border border-white/20' 
          : 'text-gray-500 hover:text-gray-300 hover:bg-white/5'
      }`}
    >
      <Icon size={22} strokeWidth={2} />
      <span className="text-xs font-semibold tracking-wide">{label}</span>
    </button>
  );

  const QuestCard = ({ title, description, progress, xp, icon: Icon, isLocked = false, difficulty = "Easy" }) => (
    <div className={`bg-gradient-to-br from-gray-900/90 to-gray-800/90 backdrop-blur-sm rounded-3xl p-6 border transition-all duration-300 hover:scale-[1.02] ${
      isLocked 
        ? 'border-gray-800/50 opacity-60' 
        : 'border-gray-700/50 hover:border-gray-600/50 hover:bg-gradient-to-br hover:from-gray-800/95 hover:to-gray-700/95'
    }`}>
      <div className="flex items-start gap-5">
        <div className={`p-4 rounded-2xl transition-all duration-300 ${
          isLocked 
            ? 'bg-gray-800/50' 
            : 'bg-white/10 backdrop-blur-sm border border-white/20'
        }`}>
          {isLocked ? (
            <Lock size={28} className="text-gray-500" strokeWidth={2} />
          ) : (
            <Icon size={28} className="text-white" strokeWidth={2} />
          )}
        </div>
        <div className="flex-1">
          <div className="flex items-center justify-between mb-3">
            <div>
              <h3 className="text-white font-bold text-xl mb-1">{title}</h3>
              <div className="flex items-center gap-3">
                <span className="text-gray-400 text-sm font-medium">{difficulty}</span>
                <div className="flex items-center gap-1 bg-white/10 backdrop-blur-sm px-3 py-1 rounded-full border border-white/20">
                  <Star size={14} className="text-white" strokeWidth={2} />
                  <span className="text-white text-sm font-bold">{xp}</span>
                </div>
              </div>
            </div>
          </div>
          <p className="text-gray-300 text-base mb-5 leading-relaxed">{description}</p>
          {!isLocked && (
            <>
              <div className="flex items-center justify-between text-sm mb-3">
                <span className="text-gray-400 font-medium">Progress</span>
                <span className="text-white font-bold">{progress}%</span>
              </div>
              <div className="w-full bg-gray-800/60 rounded-full h-3 mb-5 overflow-hidden">
                <div 
                  className="bg-gradient-to-r from-white to-gray-300 h-3 rounded-full transition-all duration-700 ease-out"
                  style={{ width: `${progress}%` }}
                />
              </div>
            </>
          )}
        </div>
      </div>
      {!isLocked && (
        <button className="w-full mt-4 bg-white text-black font-bold py-4 px-6 rounded-2xl transition-all duration-300 hover:bg-gray-100 hover:scale-[1.02] flex items-center justify-center gap-3 text-lg">
          <Play size={20} className="text-black" strokeWidth={2} />
          Continue Quest
        </button>
      )}
    </div>
  );

  const LeaderboardCard = ({ rank, username, streak, xp, category, isUser = false }) => (
    <div className={`flex items-center gap-4 p-5 rounded-2xl transition-all duration-300 hover:scale-[1.02] ${
      isUser 
        ? 'bg-gradient-to-r from-white/20 to-gray-200/20 border border-white/30 backdrop-blur-sm' 
        : 'bg-gray-900/50 hover:bg-gray-800/70 border border-gray-800/50'
    }`}>
      <div className={`w-12 h-12 rounded-2xl flex items-center justify-center font-black text-lg ${
        rank === 1 ? 'bg-gradient-to-br from-yellow-400 to-yellow-500 text-black' :
        rank === 2 ? 'bg-gradient-to-br from-gray-300 to-gray-400 text-black' :
        rank === 3 ? 'bg-gradient-to-br from-amber-500 to-amber-600 text-black' :
        'bg-gray-800/60 text-gray-300 border border-gray-700/50'
      }`}>
        {rank}
      </div>
      <div className="flex-1">
        <div className="flex items-center gap-3 mb-1">
          <h4 className="text-white font-bold text-lg">{username}</h4>
          {isUser && <span className="text-black text-xs bg-white/90 px-2 py-1 rounded-full font-bold">YOU</span>}
        </div>
        <div className="flex items-center gap-4 text-sm text-gray-400">
          <span className="flex items-center gap-1 font-medium">
            <Flame size={14} strokeWidth={2} />
            {streak} days
          </span>
          <span className="font-medium">{xp.toLocaleString()} XP</span>
          <span className="text-gray-500">{category}</span>
        </div>
      </div>
    </div>
  );

  const StatCard = ({ icon: Icon, value, label, gradient = false }) => (
    <div className={`p-6 rounded-2xl border transition-all duration-300 hover:scale-[1.02] ${
      gradient 
        ? 'bg-gradient-to-br from-white/20 to-gray-200/20 border-white/30 backdrop-blur-sm' 
        : 'bg-gray-900/50 border-gray-800/50'
    }`}>
      <div className="text-center">
        <div className="p-3 rounded-2xl bg-white/10 backdrop-blur-sm border border-white/20 w-fit mx-auto mb-4">
          <Icon size={24} className="text-white" strokeWidth={2} />
        </div>
        <div className="text-3xl font-black text-white mb-1">{value}</div>
        <div className="text-sm text-gray-400 font-medium">{label}</div>
      </div>
    </div>
  );

  const renderHome = () => (
    <div className="space-y-8">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-4xl font-black text-white mb-2">Welcome back, Alex</h1>
          <p className="text-gray-400 text-lg font-medium">Let's build something amazing today</p>
        </div>
        <div className="flex gap-3">
          <button className="p-4 bg-gray-900/60 backdrop-blur-sm rounded-2xl border border-gray-700/50 hover:border-gray-600/50 transition-all duration-300">
            <Camera size={22} className="text-gray-400" strokeWidth={2} />
          </button>
          <button className="p-4 bg-gray-900/60 backdrop-blur-sm rounded-2xl border border-gray-700/50 hover:border-gray-600/50 transition-all duration-300">
            <User size={22} className="text-gray-400" strokeWidth={2} />
          </button>
        </div>
      </div>

      {/* Search */}
      <div className="relative">
        <Search className="absolute left-5 top-1/2 transform -translate-y-1/2 text-gray-400" size={22} strokeWidth={2} />
        <input
          type="text"
          placeholder="Search your quests and goals..."
          className="w-full bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 rounded-2xl pl-14 pr-6 py-5 text-white placeholder-gray-400 focus:outline-none focus:border-white/30 focus:bg-gray-900/80 transition-all duration-300 text-lg"
        />
      </div>

      {/* Daily Inspiration */}
      <div className="bg-gradient-to-br from-gray-900/90 to-gray-800/90 backdrop-blur-sm rounded-3xl p-8 border border-gray-700/50">
        <div className="flex items-start gap-5">
          <div className="p-4 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20">
            <Heart size={28} className="text-white" strokeWidth={2} />
          </div>
          <div>
            <h3 className="text-white/80 font-bold text-sm uppercase tracking-wider mb-3">Daily Inspiration</h3>
            <p className="text-white text-2xl font-bold leading-relaxed">
              "Every small step forward is a victory worth celebrating."
            </p>
          </div>
        </div>
      </div>

      {/* Current Quest */}
      <div>
        <div className="flex items-center gap-3 mb-6">
          <div className="p-2 bg-white/10 backdrop-blur-sm rounded-xl border border-white/20">
            <Target size={20} className="text-white" strokeWidth={2} />
          </div>
          <h2 className="text-white font-black text-2xl">Today's Quest</h2>
        </div>
        <QuestCard
          title="Time Awareness Challenge"
          description="Document your daily activities to identify patterns and optimize your productivity for peak performance."
          progress={25}
          xp={100}
          icon={Clock}
          difficulty="Beginner"
        />
      </div>

      {/* Stats Row */}
      <div className="grid grid-cols-2 gap-4">
        <StatCard
          icon={Flame}
          value="0"
          label="Day Streak"
          gradient={true}
        />
        <StatCard
          icon={Trophy}
          value="0"
          label="Total XP"
        />
      </div>
    </div>
  );

  const renderCommunity = () => (
    <div className="space-y-8">
      <div className="flex items-center justify-between">
        <h1 className="text-4xl font-black text-white">Community</h1>
      </div>

      <div className="relative">
        <Search className="absolute left-5 top-1/2 transform -translate-y-1/2 text-gray-400" size={22} strokeWidth={2} />
        <input
          type="text"
          placeholder="Find inspiring people..."
          className="w-full bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 rounded-2xl pl-14 pr-6 py-5 text-white placeholder-gray-400 focus:outline-none focus:border-white/30 focus:bg-gray-900/80 transition-all duration-300 text-lg"
        />
      </div>

      <div className="flex gap-4 overflow-x-auto pb-2">
        <button className="bg-white text-black px-8 py-4 rounded-2xl font-bold transition-all duration-300 hover:bg-gray-100 whitespace-nowrap">
          <TrendingUp size={18} className="inline mr-3" strokeWidth={2} />
          Leaderboard
        </button>
        <button className="bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 text-white px-8 py-4 rounded-2xl font-bold transition-all duration-300 hover:bg-gray-800/70 whitespace-nowrap">
          <Users size={18} className="inline mr-3" strokeWidth={2} />
          Groups
        </button>
        <button className="bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 text-white px-8 py-4 rounded-2xl font-bold transition-all duration-300 hover:bg-gray-800/70 whitespace-nowrap">
          <MessageCircle size={18} className="inline mr-3" strokeWidth={2} />
          Discussion
        </button>
      </div>

      <div className="space-y-4">
        <LeaderboardCard rank={1} username="AchieveMore" streak={30} xp={1500} category="Discipline" />
        <LeaderboardCard rank={2} username="FocusMaster" streak={25} xp={1350} category="Focus" />
        <LeaderboardCard rank={3} username="DailyGrinder" streak={21} xp={1200} category="Consistency" />
        <LeaderboardCard rank={4} username="Alex Johnson" streak={0} xp={0} category="Just Started" isUser={true} />
        <LeaderboardCard rank={5} username="MindfulWarrior" streak={15} xp={820} category="Resilience" />
      </div>
    </div>
  );

  const renderQuests = () => (
    <div className="space-y-8">
      <div className="flex items-center justify-between">
        <h1 className="text-4xl font-black text-white">Your Journey</h1>
        <div className="p-3 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20">
          <Shield size={24} className="text-white" strokeWidth={2} />
        </div>
      </div>
      
      <div className="space-y-6">
        <QuestCard
          title="Reflection & Growth"
          description="Take 10 minutes to journal about a recent challenge. What did you learn? How did you grow?"
          progress={0}
          xp={50}
          icon={Brain}
          difficulty="Easy"
        />
        <QuestCard
          title="Morning Mindfulness"
          description="Begin your day with 5 minutes of meditation to center yourself and build mental resilience."
          progress={0}
          xp={75}
          icon={Focus}
          difficulty="Medium"
          isLocked={true}
        />
        <QuestCard
          title="Gratitude Practice"
          description="Write down three things you're grateful for today and reflect on why they matter to you."
          progress={0}
          xp={60}
          icon={Heart}
          difficulty="Easy"
          isLocked={true}
        />
        <QuestCard
          title="Challenge Accepted"
          description="Identify one fear you want to overcome and take a small step toward facing it today."
          progress={0}
          xp={100}
          icon={Trophy}
          difficulty="Hard"
          isLocked={true}
        />
      </div>
    </div>
  );

  const renderProfile = () => (
    <div className="space-y-8">
      <div className="text-center">
        <div className="w-24 h-24 bg-gradient-to-br from-white/20 to-gray-200/20 backdrop-blur-sm rounded-3xl mx-auto mb-6 flex items-center justify-center border border-white/30">
          <User size={48} className="text-white" strokeWidth={2} />
        </div>
        <h2 className="text-3xl font-black text-white mb-2">Alex Johnson</h2>
        <p className="text-gray-400 text-lg font-medium">Resilience Explorer</p>
      </div>

      <div className="grid grid-cols-3 gap-4">
        <StatCard icon={Flame} value="0" label="Current Streak" />
        <StatCard icon={Trophy} value="0" label="Total XP" />
        <StatCard icon={Target} value="0" label="Completed" />
      </div>

      <div className="bg-gradient-to-br from-gray-900/90 to-gray-800/90 backdrop-blur-sm rounded-3xl p-8 border border-gray-700/50">
        <h3 className="text-white font-black text-2xl mb-6">Level Progress</h3>
        <div className="flex items-center justify-between mb-4">
          <span className="text-gray-400 font-bold">Level 1</span>
          <span className="text-white font-black">0 / 1,000 XP</span>
        </div>
        <div className="w-full bg-gray-800/60 rounded-full h-4 mb-4 overflow-hidden">
          <div className="bg-gradient-to-r from-white to-gray-300 h-4 rounded-full transition-all duration-700" style={{ width: '0%' }} />
        </div>
        <p className="text-gray-400 font-medium">Complete quests to unlock new challenges and rewards!</p>
      </div>

      <div className="bg-gradient-to-br from-gray-900/90 to-gray-800/90 backdrop-blur-sm rounded-3xl p-8 border border-gray-700/50">
        <h3 className="text-white font-black text-2xl mb-6">Achievements</h3>
        <div className="grid grid-cols-4 gap-6">
          <div className="text-center opacity-40">
            <div className="w-16 h-16 bg-gray-800/60 rounded-2xl flex items-center justify-center mx-auto mb-3 border border-gray-700/50">
              <Play size={24} className="text-gray-500" strokeWidth={2} />
            </div>
            <p className="text-xs text-gray-500 font-medium">First Quest</p>
          </div>
          <div className="text-center opacity-40">
            <div className="w-16 h-16 bg-gray-800/60 rounded-2xl flex items-center justify-center mx-auto mb-3 border border-gray-700/50">
              <Flame size={24} className="text-gray-500" strokeWidth={2} />
            </div>
            <p className="text-xs text-gray-500 font-medium">Week Warrior</p>
          </div>
          <div className="text-center opacity-40">
            <div className="w-16 h-16 bg-gray-800/60 rounded-2xl flex items-center justify-center mx-auto mb-3 border border-gray-700/50">
              <Award size={24} className="text-gray-500" strokeWidth={2} />
            </div>
            <p className="text-xs text-gray-500 font-medium">Goal Crusher</p>
          </div>
          <div className="text-center opacity-40">
            <div className="w-16 h-16 bg-gray-800/60 rounded-2xl flex items-center justify-center mx-auto mb-3 border border-gray-700/50">
              <Users size={24} className="text-gray-500" strokeWidth={2} />
            </div>
            <p className="text-xs text-gray-500 font-medium">Community</p>
          </div>
        </div>
      </div>
    </div>
  );

  const renderCoach = () => (
    <div className="space-y-8">
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-4">
          <div className="p-4 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20">
            <Brain size={28} className="text-white" strokeWidth={2} />
          </div>
          <div>
            <h1 className="text-3xl font-black text-white">AI Coach</h1>
            <p className="text-gray-400 text-lg font-medium">Your personal growth mentor</p>
          </div>
        </div>
        <div className="flex items-center gap-4">
          <select 
            value={currentMood} 
            onChange={(e) => setCurrentMood(e.target.value)}
            className="bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 text-white px-4 py-3 rounded-2xl focus:outline-none focus:border-white/30 font-medium"
          >
            <option value="great">😊 Amazing</option>
            <option value="good">🙂 Good</option>
            <option value="neutral">😐 Neutral</option>
            <option value="low">😔 Low</option>
            <option value="stressed">😰 Stressed</option>
          </select>
        </div>
      </div>

      <div className="bg-gradient-to-br from-gray-900/90 to-gray-800/90 backdrop-blur-sm rounded-3xl p-8 border border-gray-700/50">
        <div className="flex items-start gap-5">
          <div className="p-4 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20">
            <Brain size={32} className="text-white" strokeWidth={2} />
          </div>
          <div className="flex-1">
            <p className="text-white text-xl leading-relaxed font-medium">
              Hi Alex! I'm here to help you navigate challenges, build resilience, and achieve your personal growth goals. 
              What's on your mind today?
            </p>
          </div>
        </div>
      </div>

      <div className="space-y-4">
        <button className="w-full bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 text-left hover:bg-gray-800/70 hover:border-gray-600/50 transition-all duration-300 group">
          <div className="flex items-center gap-4">
            <div className="p-3 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20 group-hover:bg-white/20 transition-all duration-300">
              <MessageCircle size={24} className="text-white" strokeWidth={2} />
            </div>
            <div>
              <h3 className="text-white font-bold text-lg mb-1">Work Through a Challenge</h3>
              <p className="text-gray-400 font-medium">Let's process what happened and find the lessons within</p>
            </div>
          </div>
        </button>
        
        <button className="w-full bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 text-left hover:bg-gray-800/70 hover:border-gray-600/50 transition-all duration-300 group">
          <div className="flex items-center gap-4">
            <div className="p-3 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20 group-hover:bg-white/20 transition-all duration-300">
              <Target size={24} className="text-white" strokeWidth={2} />
            </div>
            <div>
              <h3 className="text-white font-bold text-lg mb-1">Create an Action Plan</h3>
              <p className="text-gray-400 font-medium">Build a personalized roadmap for your goals</p>
            </div>
          </div>
        </button>
        
        <button className="w-full bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 text-left hover:bg-gray-800/70 hover:border-gray-600/50 transition-all duration-300 group">
          <div className="flex items-center gap-4">
            <div className="p-3 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20 group-hover:bg-white/20 transition-all duration-300">
              <Shield size={24} className="text-white" strokeWidth={2} />
            </div>
            <div>
              <h3 className="text-white font-bold text-lg mb-1">Build Mental Strength</h3>
              <p className="text-gray-400 font-medium">Develop strategies for resilience and emotional balance</p>
            </div>
          </div>
        </button>
      </div>

      <div className="relative">
        <input
          type="text"
          placeholder="What would you like to explore today?"
          className="w-full bg-gray-900/60 backdrop-blur-sm border border-gray-700/50 rounded-2xl pl-6 pr-16 py-5 text-white placeholder-gray-400 focus:outline-none focus:border-white/30 focus:bg-gray-900/80 transition-all duration-300 text-lg"
        />
        <button className="absolute right-3 top-1/2 transform -translate-y-1/2 p-3 bg-white rounded-2xl hover:bg-gray-100 transition-all duration-300">
          <ChevronRight size={20} className="text-black" strokeWidth={2} />
        </button>
      </div>
    </div>
  );

  const renderCurrentTab = () => {
    switch(currentTab) {
      case 'home': return renderHome();
      case 'quests': return renderQuests();
      case 'coach': return renderCoach();
      case 'community': return renderCommunity();
      case 'profile': return renderProfile();
      default: return renderHome();
    }
  };

  return (
    <div className="min-h-screen bg-black text-white">
      {/* Main Content */}
      <div className="pb-24 px-6 py-8 max-w-md mx-auto">
        {renderCurrentTab()}
      </div>

      {/* Bottom Navigation */}
      <nav className="fixed bottom-0 left-0 right-0 bg-black/95 backdrop-blur-sm border-t border-gray-800/50">
        <div className="flex justify-around items-center py-4 px-6 max-w-md mx-auto">
          <TabButton
            id="home"
            icon={Home}
            label="Home"
            isActive={currentTab === 'home'}
            onClick={() => setCurrentTab('home')}
          />
          <TabButton
            id="quests"
            icon={Target}
            label="Quests"
            isActive={currentTab === 'quests'}
            onClick={() => setCurrentTab('quests')}
          />
          <TabButton
            id="coach"
            icon={MessageCircle}
            label="Coach"
            isActive={currentTab === 'coach'}
            onClick={() => setCurrentTab('coach')}
          />
          <TabButton
            id="community"
            icon={Users}
            label="Community"
            isActive={currentTab === 'community'}
            onClick={() => setCurrentTab('community')}
          />
          <TabButton
            id="profile"
            icon={User}
            label="Profile"
            isActive={currentTab === 'profile'}
            onClick={() => setCurrentTab('profile')}
          />
        </div>
      </nav>
    </div>
  );
};

export default HabitApp;